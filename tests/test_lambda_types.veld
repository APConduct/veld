import std.result.{Result}

# Test lambda type inference specifically
let ok_result: Result<i32, str> = Result.Ok(42)

# Test 1: Assign lambda to variable with explicit type
let my_lambda: (i32) -> i32 = x => x * 2

# Test 2: Call the lambda directly
let lambda_result: i32 = my_lambda(5)

# Test 3: Check if we can at least call map with explicit type annotation
let mapped_explicit: Result<i32, str> = ok_result.map(x => x * 2)

# Test 4: Simple function that should work
let simple_unwrap: i32 = ok_result.unwrap_or(0)

# Return the results to check
let results = [lambda_result, simple_unwrap, mapped_explicit.unwrap_or(999)]
results
