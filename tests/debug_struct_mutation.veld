# Test for struct field mutation via mut self method

struct Counter
    value: i32

    fn inc(mut self, out: [i32]) -> [i32]
        self.value = self.value + 1
        out = out.with(self.value)
        out
    end

    fn set(mut self, v: i32, out: [i32]) -> [i32]
        self.value = v
        out = out.with(self.value)
        out
    end
end

var c = Counter(value: 0)
var out = []
out = out.with(c.value)

out = c.inc(out)
out = out.with(c.value)

out = c.set(42, out)
out = out.with(c.value)

out = c.inc(out)
out = out.with(c.value)

# Output the array for debugging
out

# Expected output:
# Initial: value = 0
# Inside inc: value = 1
# After inc: value = 1
# Inside set: value = 42
# After set(42): value = 42
# Inside inc: value = 43
# After inc again: value = 43
