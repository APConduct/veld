import std.vec.{Vec}
# TODO: consider implementing prelude logic for Vec


# Make a vector (of i32s)
let vec: #[Vec<i32>]
    = Vec.new()

# Fill her up with values
vec.push(1)
vec.push(2)
vec.push(3)
vec.push(4)
vec.push(5)
vec.push(6)
vec.push(7)
vec.push(8)

let pop1 = vec.pop() # Should be 8
let pop2 = vec.pop() # Should be 7
let pop3 = vec.pop() # Should be 6
let pop4 = vec.pop() # Should be 5

# Should be true because the index is valid
let insert_res_bool = vec.insert(0, 9)
# Should be false because the index is out of bounds
let insert_res_bad = vec.insert(8, 10)

# Should be true because the index is valid
let insert_res_good = vec.insert(4, 10)

# Sould obviously be a Some (index is valid)
# because 0 Should be within the bounds of the vector
let removed = vec.remove(0)
