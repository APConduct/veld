#| String operations and behaviors

import std.core.{ToString, Sized}
import std.option.{Option}

# Common string transformations
pub kind Transformable
    fn to_upper(self) -> str
    fn to_lower(self) -> str
    fn trim(self) -> str
    fn trim_start(self) -> str
    fn trim_end(self) -> str
end

# String search operations
pub kind Searchable
    fn contains(self, substring: str) -> bool
    fn starts_with(self, prefix: str) -> bool
    fn ends_with(self, suffix: str) -> bool
    fn index_of(self, substring: str) -> i32  # TODO: define/implement a usize type
end

# String manipulation
pub kind Manipulatable
    fn substring(self, start: i32, end: i32) -> str
    fn replace(self, from: str, to: str) -> str
    fn split(self, delimiter: str) -> [str]
    fn pad_start(self, length: i32, pad_char: str) -> str
    fn pad_end(self, length: i32, pad_char: str) -> str
    fn repeat(self, count: i32) -> str
end

# Parsing operations
pub kind Parsable
    fn to_int(self) -> Option<i32>
    fn to_float(self) -> Option<f64>
    fn to_bool(self) -> Option<bool>
end

# TODO: make sure str type conforms/is registered as the kinds above
