#| Option type for veld
#| Represents a value that may or may not be present


pub enum Option<T>
    Some(T),
    None,
end

impl<T> Option<T>
    # Returns the contained value or a default
    pub fn unwrap_or(self, default: T) -> T
        match self
            Option.Some(value) => value,
            Option.None => default,
        end
    end

     # Transform the option with a function if it contains a value
    pub fn map<U>(self, f: (T) -> U) -> Option<U>
        match self
            Option.Some(value) => Option.Some(f(value)),
            Option.None => Option.None,
        end
    end

    # Return true if the option contains a value
    pub fn is_some(self) -> bool
        match self
            Option.Some(_) => true,
            Option.None => false,
        end
    end

    # Return true if the option does not contain a value
    pub fn is_none(self) -> bool
        match self
            Option.Some(_) => false,
            Option.None => true,
        end
    end
end
