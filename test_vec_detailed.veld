import std.vec.{Vec}

# Simple test to check Vec behavior without print functions

# Test 1: Create empty Vec and check initial state
var vec = Vec.new()
let initial_length = vec.len()        # Should be 0
let initial_capacity = vec.capacity() # Should be 0
let is_empty = vec.is_empty()         # Should be true

# Test 2: Push one element - mutate in place
vec.push(42)
let length_after_first_push = vec.len()       # Should be 1
let capacity_after_first_push = vec.capacity() # Should be 1
let is_empty_after_push = vec.is_empty()      # Should be false

# Test 3: Push more elements - mutate in place
vec.push(100)
vec.push(200)
let length_after_pushes = vec.len()    # Should be 3

# Test 4: Get elements
let first = vec.get(0)    # Should be Some(42)
let second = vec.get(1)   # Should be Some(100)
let third = vec.get(2)    # Should be Some(200)
let invalid = vec.get(5)  # Should be None

# Test 5: Pop elements
let popped = vec.pop()              # Should be Some(200)
let second_popped = vec.pop()       # Should be Some(100)
let length_after_pop = vec.len()    # Should be 1

# Final test - the last value should be the final length
length_after_pop
