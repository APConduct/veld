import std.result.{Result}

# Test basic Result creation - this should work
let ok_result: Result<i32, str> = Result.Ok(42)
let err_result: Result<i32, str> = Result.Err("error")

# Test method calls with explicit type annotations
let unwrapped: i32 = ok_result.unwrap_or(0)
let mapped: Result<i32, str> = ok_result.map(x => x * 2)
let is_ok_check: bool = ok_result.is_ok()

# Test each method call individually
let unwrapped_test: i32 = unwrapped
let mapped_test: i32 = mapped.unwrap_or(999)
let boolean_test: bool = is_ok_check
